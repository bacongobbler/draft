name: release
on:
  push:
    branches:
      - master
    tags:
      - "v*"
jobs:
  build:
    name: build release assets
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64]
    steps:
      - uses: actions/checkout@v2

      - name: set the release version (tag)
        if: startsWith(github.ref, 'refs/tags')
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: set the release version (master)
        if: github.ref == 'refs/heads/master'
        run: echo ::set-env name=RELEASE_VERSION::canary
      
      - name: lowercase the runner OS name
        run: |
          OS=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          echo ::set-env name=RUNNER_OS::$OS
      
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.14.2'
      
      - name: build
        run: |
          make
      
      - name: package release assets
        run: |
          mkdir _dist
          cp README.md LICENSE bin/draft _dist/
          cd _dist
          tar czf draft-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.arch }}.tar.gz README.md LICENSE draft
      
      - uses: actions/upload-artifact@v1
        with:
          name: draft
          path: _dist/draft-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.arch }}.tar.gz
  publish:
    name: publish release assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: set the release version
        if: startsWith(github.ref, 'refs/tags')
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: set the release version
        if: github.ref == 'refs/heads/master'
        run: echo ::set-env name=RELEASE_VERSION::canary

      - name: download release assets
        uses: actions/download-artifact@v1
        with:
          name: draft

      - name: generate checksums
        run: |
          cd draft
          sha256sum * > checksums-${{ env.RELEASE_VERSION }}.txt
      - name: upload to azure
        uses: bacongobbler/azure-blob-storage-upload@v1.0.0
        with:
          source_dir: draft
          container_name: releases
          connection_string: ${{ secrets.AzureStorageConnectionString }}
